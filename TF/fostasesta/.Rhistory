plot_geo(locationmode = 'USA-states',
lat=~ne_lat,
lon=~ne_lon,
#size=~numdocbin,
#size=~ceiling(avgRate),
size =~as.numeric(ratebin),
#color=~ratebin,
alpha = 0.7,
mode = 'markers',
frame=~date,
showlegend=TRUE) %>%
# add_markers(color = ~doc_count, frame = ~date_mon) %>%
#colorbar(title = "Price Per Hour", tickprefix = '$') %>%
layout(
title = 'Time Lapse of Average Price per Service <br> January 2018 - October 2018',
geo = list(scope = 'usa',
showland = T,
landcolor = toRGB("#080d12"),
#plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
#projection = list(type = 'conic conformal'),
projection = list(type = 'albers usa'),
showlakes = TRUE,
showcountries = TRUE,
lakecolor = toRGB('white')
)
) %>%
animation_button(
buttons = list(
list(
label = 'Play',
method = 'animate',
args = list( frame =~frame, fromcurrent = TRUE, mode = "immediate")
),
label='Pause',
method = 'animate',
args = list(duration = 0, redraw = FALSE, mode = 'immediate'))
) %>%
animation_slider(
currentvalue = list(prefix = " ", font = list(color="black"))
) %>%
animation_opts(
1000, transition = frame, easing = "elastic-in-out"
) %>%
toWebGL()
p = pricesdf %>%
#format(as.Date(date),format ="%B") %>%
plot_geo(locationmode = 'USA-states',
lat=~ne_lat,
lon=~ne_lon,
#size=~numdocbin,
#size=~ceiling(avgRate),
size =~as.numeric(ratebin),
#color=~ratebin,
alpha = 0.7,
mode = 'markers',
frame=~date,
showlegend=TRUE) %>%
# add_markers(color = ~doc_count, frame = ~date_mon) %>%
#colorbar(title = "Price Per Hour", tickprefix = '$') %>%
layout(
title = 'Time Lapse of Average Price per Service <br> January 2018 - October 2018',
geo = list(scope = 'usa',
showland = T,
landcolor = toRGB("#080d12"),
#plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
#projection = list(type = 'conic conformal'),
projection = list(type = 'albers usa'),
showlakes = TRUE,
showcountries = TRUE,
lakecolor = toRGB('white')
)
) %>%
animation_button(
buttons = list(
list(
label = 'Play',
method = 'animate',
args = list( frame =~frame, fromcurrent = TRUE, mode = "immediate")
),
label='Pause',
method = 'animate',
args = list(duration = 0, redraw = FALSE, mode = 'immediate'))
) %>%
animation_slider(
currentvalue = list(prefix = " ", font = list(color="black"))
) %>%
animation_opts(
1000, easing = "elastic-in-out"
) %>%
toWebGL()
p
p = pricesdf %>%
#format(as.Date(date),format ="%B") %>%
plot_geo(locationmode = 'USA-states',
lat=~ne_lat,
lon=~ne_lon,
#size=~numdocbin,
#size=~ceiling(avgRate),
size =~as.numeric(ratebin),
#color=~ratebin,
alpha = 0.7,
mode = 'markers',
frame=~date,
showlegend=TRUE) %>%
# add_markers(color = ~doc_count, frame = ~date_mon) %>%
#colorbar(title = "Price Per Hour", tickprefix = '$') %>%
layout(
title = 'Time Lapse of Average Price per Service <br> January 2018 - October 2018',
geo = list(scope = 'usa',
showland = T,
landcolor = toRGB("#080d12"),
#plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
#projection = list(type = 'conic conformal'),
projection = list(type = 'albers usa'),
showlakes = TRUE,
showcountries = TRUE,
lakecolor = toRGB('white')
)
) %>%
animation_button(
buttons = list(
list(
label = 'Play',
method = 'animate',
args = list( frame =~frame, fromcurrent = TRUE, mode = "immediate")
),
label='Pause',
method = 'animate',
args = list(duration = 0, redraw = FALSE, mode = 'immediate'))
) %>%
animation_slider(
currentvalue = list(prefix = " ", font = list(color="black"))
) %>%
animation_opts(
1000, easing = "elastic-in-out"
)
p = pricesdf %>%
#format(as.Date(date),format ="%B") %>%
plot_geo(locationmode = 'USA-states',
lat=~ne_lat,
lon=~ne_lon,
#size=~numdocbin,
#size=~ceiling(avgRate),
size =~as.numeric(ratebin),
#color=~ratebin,
alpha = 0.7,
mode = 'markers',
frame=~date,
showlegend=TRUE) %>%
# add_markers(color = ~doc_count, frame = ~date_mon) %>%
#colorbar(title = "Price Per Hour", tickprefix = '$') %>%
layout(
title = 'Time Lapse of Average Price per Service <br> January 2018 - October 2018',
geo = list(scope = 'usa',
showland = T,
landcolor = toRGB("#080d12"),
#plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
#projection = list(type = 'conic conformal'),
projection = list(type = 'albers usa'),
showlakes = TRUE,
showcountries = TRUE,
lakecolor = toRGB('white')
)
) %>%
animation_button(
buttons = list(
list(
label = 'Play',
method = 'animate',
args = list( frame =~frame, fromcurrent = TRUE, mode = "immediate")
),
label='Pause',
method = 'animate',
args = list(duration = 0, redraw = FALSE, mode = 'immediate'))
) %>%
animation_slider(
currentvalue = list(prefix = " ", font = list(color="black"))
) %>%
animation_opts(
1000, easing = "elastic-in-out"
)
p
p = pricesdf %>%
#format(as.Date(date),format ="%B") %>%
plot_geo(locationmode = 'USA-states',
lat=~ne_lat,
lon=~ne_lon,
#size=~numdocbin,
#size=~ceiling(avgRate),
size =~as.numeric(ratebin),
#color=~ratebin,
alpha = 0.7,
mode = 'markers',
frame=~date,
showlegend=TRUE) %>%
# add_markers(color = ~doc_count, frame = ~date_mon) %>%
#colorbar(title = "Price Per Hour", tickprefix = '$') %>%
layout(
title = 'Time Lapse of Average Price per Service <br> January 2018 - October 2018',
geo = list(scope = 'usa',
showland = T,
landcolor = toRGB("#080d12"),
#plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
#projection = list(type = 'conic conformal'),
projection = list(type = 'albers usa'),
showlakes = TRUE,
showcountries = TRUE,
lakecolor = toRGB('white')
)
) %>%
animation_button(
buttons = list(
list(
label = 'Play',
method = 'animate',
args = list( frame =~frame, fromcurrent = TRUE, mode = "immediate")
),
label='Pause',
method = 'animate',
args = list(duration = 0, redraw = FALSE, mode = 'immediate'))
)
p = pricesdf %>%
#format(as.Date(date),format ="%B") %>%
plot_geo(locationmode = 'USA-states',
lat=~ne_lat,
lon=~ne_lon,
#size=~numdocbin,
#size=~ceiling(avgRate),
size =~as.numeric(ratebin),
#color=~ratebin,
alpha = 0.7,
mode = 'markers',
frame=~date,
showlegend=TRUE) %>%
# add_markers(color = ~doc_count, frame = ~date_mon) %>%
#colorbar(title = "Price Per Hour", tickprefix = '$') %>%
layout(
title = 'Time Lapse of Average Price per Service <br> January 2018 - October 2018',
geo = list(scope = 'usa',
showland = T,
landcolor = toRGB("#080d12"),
#plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
#projection = list(type = 'conic conformal'),
projection = list(type = 'albers usa'),
showlakes = TRUE,
showcountries = TRUE,
lakecolor = toRGB('white')
)
) %>%
animation_button(
buttons = list(
list(
label = 'Play',
method = 'animate',
args = list( frame =~frame, fromcurrent = TRUE, mode = "immediate")
),
label='Pause',
method = 'animate',
args = list(duration = 0, redraw = FALSE, mode = 'immediate'))
)
p
head(d)
d <- pricesdf %>%
group_by(date) %>%
tally(avgRate) %>%
accumulate_by(~date)
d <- pricesdf %>%
group_by(date) %>%
tally(avgRate)
head(d)
p <- d %>%
plot_ly(
x = ~date,
y = ~n,
#frame = ~date_mon,
type = 'bar'
#   mode = 'lines'
#line = list(simplyfy = F)
) %>%
layout(
xaxis = list(
title = "Date",
zeroline = F
)
)
p
d <- pricesdf %>%
group_by(date_mon) %>%
tally(avgRate)
head(d)
p <- d %>%
plot_ly(
x = ~date,
y = ~n,
#frame = ~date_mon,
type = 'bar'
#   mode = 'lines'
#line = list(simplyfy = F)
) %>%
layout(
xaxis = list(
title = "Date",
zeroline = F
)
)
p
p <- d %>%
plot_ly(
x = ~date_mon,
y = ~n,
#frame = ~date_mon,
type = 'bar'
#   mode = 'lines'
#line = list(simplyfy = F)
) %>%
layout(
xaxis = list(
title = "Date",
zeroline = F
)
)
p
d <- pricesdf %>%
group_by(date) %>%
tally(avgRate)
p <- d %>%
plot_ly(
x = ~date,
y = ~n,
#frame = ~date_mon,
type = 'bar'
#   mode = 'lines'
#line = list(simplyfy = F)
) %>%
layout(
xaxis = list(
title = "Date",
zeroline = F
)
)
p
p <- d %>%
plot_ly(
x = ~date,
y = ~n,
#frame = ~date_mon,
type = 'bar',
showlegend = F,
showline = FALSE,
showticklabels = FALSE
#   mode = 'lines'
#line = list(simplyfy = F)
) %>%
layout(
xaxis = list(
title = "Date",
zeroline = F
)
)
p
p <- d %>%
plot_ly(
x = ~date,
y = ~n,
#frame = ~date_mon,
type = 'bar',
showlegend = F,
showline = F,
showticklabels = F
#   mode = 'lines'
#line = list(simplyfy = F)
) %>%
layout(
xaxis = list(
title = "Date",
zeroline = F
)
)
p
p <- d %>%
plot_ly(
x = ~date,
y = ~n,
#frame = ~date_mon,
type = 'bar',
showlegend = F,
showline = F,
showticklabels = F,
showgrid = F
#   mode = 'lines'
#line = list(simplyfy = F)
) %>%
layout(
xaxis = list(
title = "Date",
zeroline = F
)
)
p
p <- d %>%
plot_ly(
x = ~date,
y = ~n,
#frame = ~date_mon,
type = 'bar',
showlegend = F,
showline = F,
showticklabels = F,
showgrid = F
#   mode = 'lines'
#line = list(simplyfy = F)
) %>%
layout(
xaxis = list(
title = "Date",
zeroline = F
)
)
p
p2 <- d %>%
plot_ly(
x = ~date,
y = ~n,
#frame = ~date_mon,
type = 'bar',
showlegend = F,
showline = F,
showticklabels = F,
showgrid = F
#   mode = 'lines'
#line = list(simplyfy = F)
) %>%
layout(
xaxis = list(
title = "Date",
zeroline = F
)
)
p1 = pricesdf %>%
#format(as.Date(date),format ="%B") %>%
plot_geo(locationmode = 'USA-states',
lat=~ne_lat,
lon=~ne_lon,
#size=~numdocbin,
#size=~ceiling(avgRate),
size =~as.numeric(ratebin),
#color=~ratebin,
alpha = 0.7,
mode = 'markers',
frame=~date,
showlegend=TRUE) %>%
# add_markers(color = ~doc_count, frame = ~date_mon) %>%
#colorbar(title = "Price Per Hour", tickprefix = '$') %>%
layout(
title = 'Time Lapse of Average Price per Service <br> January 2018 - October 2018',
geo = list(scope = 'usa',
showland = T,
landcolor = toRGB("#080d12"),
#plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
#projection = list(type = 'conic conformal'),
projection = list(type = 'albers usa'),
showlakes = TRUE,
showcountries = TRUE,
lakecolor = toRGB('white')
)
)
p <- subplot(p1, p2, nrows = 2) %>%
layout(title = "",
xaxis = list(domain=list(x=c(0,0.5),y=c(0,0.5))),
scene = list(domain=list(x=c(0.5,1),y=c(0,0.5))),
xaxis2 = list(domain=list(x=c(0.5,1),y=c(0.5,1))),
showlegend=FALSE,showlegend2=FALSE)
p
p1 = pricesdf %>%
#format(as.Date(date),format ="%B") %>%
plot_geo(locationmode = 'USA-states',
lat=~ne_lat,
lon=~ne_lon,
#size=~numdocbin,
#size=~ceiling(avgRate),
size =~as.numeric(ratebin),
#color=~ratebin,
alpha = 0.7,
mode = 'markers',
frame=~date,
showlegend=TRUE) %>%
# add_markers(color = ~doc_count, frame = ~date_mon) %>%
#colorbar(title = "Price Per Hour", tickprefix = '$') %>%
layout(
title = 'Time Lapse of Average Price per Service <br> January 2018 - October 2018',
geo = list(scope = 'usa',
showland = T,
landcolor = toRGB("#080d12"),
#plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
#projection = list(type = 'conic conformal'),
projection = list(type = 'albers usa'),
showlakes = TRUE,
showcountries = TRUE,
lakecolor = toRGB('white')
)
)
p1
pricesdf = as.data.frame(read.csv('geohash_prices.csv', header = TRUE, sep=","))
setwd("~/repos/TF/fostasesta")
pricesdf = as.data.frame(read.csv('geohash_prices.csv', header = TRUE, sep=","))
head(pricesdf)
head(pricesdf,200)
pricesdf %>% group_by(date) %>% tally(doc_count)
library(tidyr)
library(dplyr)
library(plotly)
pricesdf %>% group_by(date) %>% tally(doc_count)
